name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  create:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile main.py
      shell: bash

    - name: Rename executable
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          mv dist/main dist/todo
        else
          mv dist/main.exe dist/todo.exe
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-todo
        path: |
          dist/todo*
          dist/todo.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Ubuntu build artifacts
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest-todo
        path: ./dist/ubuntu

    - name: Download Windows build artifacts
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-todo
        path: ./dist/windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Ubuntu Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ubuntu/todo
        asset_name: todo-ubuntu
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/windows/todo.exe
        asset_name: todo-windows.exe
        asset_content_type: application/octet-stream